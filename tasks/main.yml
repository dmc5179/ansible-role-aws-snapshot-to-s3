---
# tasks file for aws-snapshot-to-s3

- name: Create EC2 Instance
  local_action:
    module: ec2
    assign_public_ip: true
    ebs_optimized: true
    instance_tags: '{"key":"Name","key":"Snapshot-Exporter"}'
    instance_initiated_shutdown_behavior: "terminate"
    key_name: "{{ ec2_key_name }}"
    region: "{{ aws_region }}"
    group_id: "{{ ec2_security_group }}"
    instance_type: "{{ ec2_instance_type }}"
    image: "{{ ami }}"
    wait: true
    count: 1
    vpc_subnet_id: "{{ subnet_id }}"
    volumes:
      - device_name: /dev/sda1
        volume_type: gp2
        volume_size: 15
        delete_on_termination: true
    aws_access_key: "{{ aws_access_key_id }}"
    aws_secret_key: "{{ aws_secret_access_key }}"
  register: ec2_instance

# TODO: Add task to tag ec2 instance with name
# TODO: Add task to tag ec2 root dir vol with name

# - name: Debug
#   debug:
#     msg: "{{ ec2_instance }}"

- name: Add host facts for new ec2 instance
  add_host:
    name: snapshotexporter
    ansible_host: "{{ ec2_instance['instances'][0]['public_dns_name'] }}"
    ansible_ssh_private_key_file: "{{ ec2_key_file }}"
    ansible_user: ec2-user
    groups: snapshotexporters

- name: Create a volume from the snapshot and attach it to the instance
  local_action:
    module: ec2_vol
    instance: "{{ ec2_instance.instance_ids[0] }}"
    snapshot: "{{ snapshot_id }}"
    volume_type: gp2
    delete_on_termination: true
    device_name: "/dev/xvdf"
    name: "Snapshot-exporter-src"
    state: present
    region: "{{ aws_region }}"
    aws_access_key: "{{ aws_access_key_id }}"
    aws_secret_key: "{{ aws_secret_access_key }}"
  register: ec2_vol_src

# - name: Debug
#   debug:
#     msg: "{{ ec2_vol_src }}"

- name: Create a volume to place the dd dump file
  local_action:
    module: ec2_vol
    instance: "{{ ec2_instance.instance_ids[0] }}"
    volume_size: "{{ (ec2_vol_src.volume.size*1.25)|int|round }}"
    volume_type: "{{ ec2_vol_src.volume.type }}"
    delete_on_termination: true
    device_name: "/dev/xvdg"
    name: "Snapshot-exporter-dst"
    state: present
    region: "{{ aws_region }}"
    zone: "{{ ec2_vol_src.volume.zone }}"
    aws_access_key: "{{ aws_access_key_id }}"
    aws_secret_key: "{{ aws_secret_access_key }}"
  register: ec2_vol_dst

- name: Initialize device and create partition
  delegate_to: snapshotexporter
  become: true
  parted:
    device: "/dev/xvdg"
    label: gpt
    number: 1
    state: present

- name: Create an xfs filesystem on /dev/xvdg1
  delegate_to: snapshotexporter
  become: true
  filesystem:
    fstype: xfs
    dev: /dev/xvdg1

- name: Create directory to mount dst
  delegate_to: snapshotexporter
  become: true
  file:
    path: /mnt/export
    state: directory
    mode: '0755'

- name: Mount export volume
  delegate_to: snapshotexporter
  become: true
  mount:
    path: /mnt/export
    src: /dev/xvdg1
    fstype: xfs
    opts: rw,noauto
    state: mounted

- name: Export the contents of the source volume to the temp volume with dd
  delegate_to: snapshotexporter
  become: true
  command:
    cmd: dd conv=fsync if=/dev/xvdf of=/mnt/export/xvdf.raw

- name: Install python3 pip
  delegate_to: snapshotexporter
  become: true
  yum:
    name: python3-pip
    state: present

- name: Upgrade pip
  delegate_to: snapshotexporter
  become: true
  pip:
    name: pip
    executable: pip3
    state: latest

- name: Install AWS CLI
  delegate_to: snapshotexporter
  become: true
  pip:
    name: awscli
    executable: pip3
    state: latest

- name: Copy export to S3
  delegate_to: snapshotexporter
  become: true
  command:
    cmd: /usr/local/bin/aws s3 cp /mnt/export/xvdf.raw "s3://{{ s3_bucket }}/{{ s3_dir }}/"
  environment:
    AWS_ACCESS_KEY_ID: "{{ aws_access_key_id }}"
    AWS_SECRET_ACCESS_KEY: "{{ aws_secret_access_key }}"
    AWS_DEFAULT_REGION: "{{ aws_region }}"

# This should delete the volumes as well
- name: Shutdown the EC2 Instance
  local_action:
    module: ec2
    state: 'absent'
    instance_id: "ec2_instance.instance_ids[0]"
